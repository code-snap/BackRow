DGlib={};DGlib.version="1.0b1";DGlib.error=new Error();DGlib.error.name="DGlib Error";DGlib.baError=new Error();DGlib.baError.name="DGlib Bad argument error";DGlib.canvasArray={};DGlib.currentCanvas={id:null,context:null,size:[0,0]};DGlib.getCanvas2DContext=function(b){var a=document.getElementById(b);return a.getContext("2d")};DGlib.windowRelativePercentage=function(d,c){var b=d.trim();var e=parseFloat(b);var a;if(c=="width"){a=document.body.offsetWidth}else{if(c=="height"){a=document.body.offsetHeight}else{DGlib.baError.message='Bad Argument: relativeTo argument of DGlib.windowRelativePercentage must be either "height" or "width"';throw (DGlib.baError)}}return(e*a)/100};DGlib.canvasRelativePercentage=function(d,c){var b=d.trim();var e=parseFloat(b);var a;if(c=="width"){a=DGlib.currentCanvas.size[0]}else{if(c=="height"){a=DGlib.currentCanvas.size[1]}else{DGlib.baError.message='Bad Argument: relativeTo argument of DGlib.canvasRelativePercentage must be either "height" or "width"';throw (DGlib.baError)}}return(e*a)/100};DGlib.setCanvasSize=function(b,a){if(DGlib.currentCanvas.id===null){DGlib.error.message="Error: DGlib.selectCanvas() must be called before runing DGlib.SetCanvasSize";throw (DGlib.error)}$(DGlib.currentCanvas.id).setStyles({width:b,height:a});DGlib.currentCanvas.size[0]=$(DGlib.currentCanvas.id).offsetWidth;DGlib.currentCanvas.size[1]=$(DGlib.currentCanvas.id).offsetHeight;$(DGlib.currentCanvas.id).setProperties({width:DGlib.currentCanvas.size[0],height:DGlib.currentCanvas.size[1]})};DGlib.selectCanvas=function(b){var a=DGlib.getCanvas2DContext(b);DGlib.currentCanvas.id=b;DGlib.currentCanvas.context=a;DGlib.currentCanvas.size[0]=$(DGlib.currentCanvas.id).offsetWidth;DGlib.currentCanvas.size[1]=$(DGlib.currentCanvas.id).offsetHeight;if(DGlib.canvasArray[b]===undefined){DGlib.canvasArray[b]={}}};DGlib.drawRect=function(b,c,d){if(DGlib.currentCanvas.context===null){DGlib.error.message="Error: DGlib.selectCanvas() must be called before runing DGlib.drawRect()";throw (DGlib.error)}if($type(b[0])=="string"){b[0]=DGlib.canvasRelativePercentage(b[0],"width")}if($type(b[1])=="string"){b[1]=DGlib.canvasRelativePercentage(b[1],"height")}if($type(b[2])=="string"){b[2]=DGlib.canvasRelativePercentage(b[2],"width")}if($type(b[3])=="string"){b[3]=DGlib.canvasRelativePercentage(b[3],"height")}var a=DGlib.currentCanvas.context;switch(d){case"fill":a.fillStyle=c;a.fillRect(b[0],b[1],b[2],b[3]);break;case"stroke":a.strokeStyle=c;a.strokeRect(b[0],b[1],b[2],b[3]);break}};DGlib.drawPoly=function(h,b,g,c,e){for(var a=0;a<h.length;a++){if(h[a].length!==2){DGlib.baError.message="Bad Argument Error: Each item of the array of points passed to DGlib.drawLine must have a pair of numbers";throw (DGlib.baError)}for(var f=0;f<2;f++){if($type(h[a][f])=="string"){if(f===0){h[a][f]=DGlib.canvasRelativePercentage(h[a][f],"width")}else{h[a][f]=DGlib.canvasRelativePercentage(h[a][f],"height")}}}}var j=DGlib.currentCanvas.context;j.lineWidth=g;j.beginPath();j.moveTo(h[0][0],h[0][1]);for(var d=1;d<h.length;d++){j.lineTo(h[d][0],h[d][1])}if(c){j.closePath()}switch(e){case"stroke":j.strokeStyle=b;j.stroke();break;case"fill":j.fillStyle=b;j.fill();break;case"both":if($type(b)!=="array"){DGlib.baError.message="Bad Argument Error: On DGlib.drawPoly() mode both, color has to be an array of two colors";throw (DGlib.baError)}else{j.fillStyle=b[1];j.fill();j.strokeStyle=b[0];j.stroke()}break}};DGlib.drawLine=function(d,c,a,b){DGlib.drawPoly([d,c],a,b,false,"stroke")};DGlib.drawCircle=function(b,a,d,e,f){if(DGlib.currentCanvas.context===null){DGlib.error.message="Error: DGlib.selectCanvas() must be called before runing DGlib.drawCircle()";throw (DGlib.error)}if($type(b[0])=="string"){b[0]=DGlib.canvasRelativePercentage(b[0],"width")}if($type(b[1])=="string"){b[1]=DGlib.canvasRelativePercentage(b[1],"height")}var c=DGlib.currentCanvas.context;c.lineWidth=e;c.beginPath();c.arc(b[0],b[1],a,0,2*Math.PI,false);switch(f){case"stroke":c.strokeStyle=d;c.stroke();break;case"fill":c.fillStyle=d;c.fill();break;case"both":if($type(d)!=="array"){DGlib.baError.message="Bad Argument Error: On DGlib.drawPoly() mode both, color has to be an array of two colors";throw (DGlib.baError)}else{c.fillStyle=d[1];c.fill();c.strokeStyle=d[0];c.stroke()}break}};DGlib.drawRoundedRectangle=function(c,a,d,e,f){if(DGlib.currentCanvas.context===null){DGlib.error.message="Error: DGlib.selectCanvas() must be called before runing DGlib.drawRoundedRectangle()";throw (DGlib.error)}if($type(c[0])=="string"){c[0]=DGlib.canvasRelativePercentage(c[0],"width")}if($type(c[1])=="string"){c[1]=DGlib.canvasRelativePercentage(c[1],"height")}if($type(c[2])=="string"){c[2]=DGlib.canvasRelativePercentage(c[2],"width")}if($type(c[3])=="string"){c[3]=DGlib.canvasRelativePercentage(c[3],"height")}if($type(a)=="string"){a=DGlib.canvasRelativePercentage(a,"height")}var b=DGlib.currentCanvas.context;b.lineWidth=e;b.beginPath();b.moveTo(c[0]+a,c[1]);b.lineTo(c[0]+(c[2]-a),c[1]);b.arc(c[0]+(c[2]-a),c[1]+a,a,(3*Math.PI)/2,0,false);b.lineTo(c[0]+c[2],c[1]+(c[3]-a));b.arc(c[0]+(c[2]-a),c[1]+(c[3]-a),a,0,Math.PI/2,false);b.lineTo(c[0]+a,c[1]+c[3]);b.arc(c[0]+a,c[1]+(c[3]-a),a,Math.PI/2,Math.PI,false);b.lineTo(c[0],c[1]+a);b.arc(c[0]+a,c[1]+a,a,Math.PI,(3*Math.PI)/2,false);b.closePath();switch(f){case"stroke":b.strokeStyle=d;b.stroke();break;case"fill":b.fillStyle=d;b.fill();break;case"both":if($type(d)!=="array"){DGlib.baError.message="Bad Argument Error: On DGlib.drawPoly() mode both, color has to be an array of two colors";throw (DGlib.baError)}else{b.fillStyle=d[1];b.fill();b.strokeStyle=d[0];b.stroke()}break}};DGlib.linearGradient=function(d,c){if(DGlib.currentCanvas.context===null){DGlib.error.message="Error: DGlib.selectCanvas() must be called before runing DGlib.linearGradient()";throw (DGlib.error)}if($type(d[0])=="string"){d[0]=DGlib.canvasRelativePercentage(d[0],"width")}if($type(d[1])=="string"){d[1]=DGlib.canvasRelativePercentage(d[1],"height")}if($type(c[0])=="string"){c[0]=DGlib.canvasRelativePercentage(c[0],"width")}if($type(c[1])=="string"){c[1]=DGlib.canvasRelativePercentage(c[1],"height")}var b=DGlib.currentCanvas.context;var a=b.createLinearGradient(d[0],d[1],c[0],c[1]);return a};DGlib.drawImage=function(d,a){if(DGlib.currentCanvas.context===null){DGlib.error.message="Error: DGlib.selectCanvas() must be called before runing DGlib.drawImage()";throw (DGlib.error)}var b=DGlib.currentCanvas.context;if($type(a[0])=="string"){a[0]=DGlib.canvasRelativePercentage(a[0],"width")}if($type(a[1])=="string"){a[1]=DGlib.canvasRelativePercentage(a[1],"height")}var c=new Image;c.onload=function(){b.drawImage(c,a[0],a[1])};c.src=d};